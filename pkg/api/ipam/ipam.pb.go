// Copyright (c) 2022 Cisco and/or its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at:
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This contains the core Network Service Mesh API definitions for external
// consumption via gRPC protobufs.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: ipam.proto

package ipam

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestType int32

const (
	RequestType_UNDEFINED RequestType = 0
	RequestType_ALLOCATE  RequestType = 1
	RequestType_DELETE    RequestType = 2
)

// Enum value maps for RequestType.
var (
	RequestType_name = map[int32]string{
		0: "UNDEFINED",
		1: "ALLOCATE",
		2: "DELETE",
	}
	RequestType_value = map[string]int32{
		"UNDEFINED": 0,
		"ALLOCATE":  1,
		"DELETE":    2,
	}
)

func (x RequestType) Enum() *RequestType {
	p := new(RequestType)
	*p = x
	return p
}

func (x RequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_ipam_proto_enumTypes[0].Descriptor()
}

func (RequestType) Type() protoreflect.EnumType {
	return &file_ipam_proto_enumTypes[0]
}

func (x RequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestType.Descriptor instead.
func (RequestType) EnumDescriptor() ([]byte, []int) {
	return file_ipam_proto_rawDescGZIP(), []int{0}
}

type IPAMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            RequestType `protobuf:"varint,1,opt,name=type,proto3,enum=ipam.RequestType" json:"type,omitempty"`
	Prefix          string      `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	ExcludePrefixes []string    `protobuf:"bytes,3,rep,name=exclude_prefixes,json=excludePrefixes,proto3" json:"exclude_prefixes,omitempty"`
}

func (x *IPAMRequest) Reset() {
	*x = IPAMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipam_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPAMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAMRequest) ProtoMessage() {}

func (x *IPAMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipam_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAMRequest.ProtoReflect.Descriptor instead.
func (*IPAMRequest) Descriptor() ([]byte, []int) {
	return file_ipam_proto_rawDescGZIP(), []int{0}
}

func (x *IPAMRequest) GetType() RequestType {
	if x != nil {
		return x.Type
	}
	return RequestType_UNDEFINED
}

func (x *IPAMRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *IPAMRequest) GetExcludePrefixes() []string {
	if x != nil {
		return x.ExcludePrefixes
	}
	return nil
}

var File_ipam_proto protoreflect.FileDescriptor

var file_ipam_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x69, 0x70, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x69, 0x70,
	0x61, 0x6d, 0x22, 0x77, 0x0a, 0x0b, 0x49, 0x50, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x69, 0x70, 0x61, 0x6d, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x2a, 0x36, 0x0a, 0x0b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e,
	0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x4c, 0x4c,
	0x4f, 0x43, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x45, 0x10, 0x02, 0x32, 0x40, 0x0a, 0x0b, 0x49, 0x50, 0x41, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x11, 0x2e,
	0x69, 0x70, 0x61, 0x6d, 0x2e, 0x49, 0x50, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x69, 0x70, 0x61, 0x6d, 0x2e, 0x49, 0x50, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x30, 0x01, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x69, 0x70, 0x61, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ipam_proto_rawDescOnce sync.Once
	file_ipam_proto_rawDescData = file_ipam_proto_rawDesc
)

func file_ipam_proto_rawDescGZIP() []byte {
	file_ipam_proto_rawDescOnce.Do(func() {
		file_ipam_proto_rawDescData = protoimpl.X.CompressGZIP(file_ipam_proto_rawDescData)
	})
	return file_ipam_proto_rawDescData
}

var file_ipam_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ipam_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ipam_proto_goTypes = []interface{}{
	(RequestType)(0),    // 0: ipam.RequestType
	(*IPAMRequest)(nil), // 1: ipam.IPAMRequest
}
var file_ipam_proto_depIdxs = []int32{
	0, // 0: ipam.IPAMRequest.type:type_name -> ipam.RequestType
	1, // 1: ipam.IPAMService.Request:input_type -> ipam.IPAMRequest
	1, // 2: ipam.IPAMService.Request:output_type -> ipam.IPAMRequest
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ipam_proto_init() }
func file_ipam_proto_init() {
	if File_ipam_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ipam_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPAMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ipam_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ipam_proto_goTypes,
		DependencyIndexes: file_ipam_proto_depIdxs,
		EnumInfos:         file_ipam_proto_enumTypes,
		MessageInfos:      file_ipam_proto_msgTypes,
	}.Build()
	File_ipam_proto = out.File
	file_ipam_proto_rawDesc = nil
	file_ipam_proto_goTypes = nil
	file_ipam_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IPAMServiceClient is the client API for IPAMService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IPAMServiceClient interface {
	Request(ctx context.Context, in *IPAMRequest, opts ...grpc.CallOption) (IPAMService_RequestClient, error)
}

type iPAMServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIPAMServiceClient(cc grpc.ClientConnInterface) IPAMServiceClient {
	return &iPAMServiceClient{cc}
}

func (c *iPAMServiceClient) Request(ctx context.Context, in *IPAMRequest, opts ...grpc.CallOption) (IPAMService_RequestClient, error) {
	stream, err := c.cc.NewStream(ctx, &_IPAMService_serviceDesc.Streams[0], "/ipam.IPAMService/Request", opts...)
	if err != nil {
		return nil, err
	}
	x := &iPAMServiceRequestClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type IPAMService_RequestClient interface {
	Recv() (*IPAMRequest, error)
	grpc.ClientStream
}

type iPAMServiceRequestClient struct {
	grpc.ClientStream
}

func (x *iPAMServiceRequestClient) Recv() (*IPAMRequest, error) {
	m := new(IPAMRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// IPAMServiceServer is the server API for IPAMService service.
type IPAMServiceServer interface {
	Request(*IPAMRequest, IPAMService_RequestServer) error
}

// UnimplementedIPAMServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIPAMServiceServer struct {
}

func (*UnimplementedIPAMServiceServer) Request(*IPAMRequest, IPAMService_RequestServer) error {
	return status.Errorf(codes.Unimplemented, "method Request not implemented")
}

func RegisterIPAMServiceServer(s *grpc.Server, srv IPAMServiceServer) {
	s.RegisterService(&_IPAMService_serviceDesc, srv)
}

func _IPAMService_Request_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(IPAMRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(IPAMServiceServer).Request(m, &iPAMServiceRequestServer{stream})
}

type IPAMService_RequestServer interface {
	Send(*IPAMRequest) error
	grpc.ServerStream
}

type iPAMServiceRequestServer struct {
	grpc.ServerStream
}

func (x *iPAMServiceRequestServer) Send(m *IPAMRequest) error {
	return x.ServerStream.SendMsg(m)
}

var _IPAMService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ipam.IPAMService",
	HandlerType: (*IPAMServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Request",
			Handler:       _IPAMService_Request_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "ipam.proto",
}
