// Code generated by protoc-gen-go. DO NOT EDIT.
// source: registry.proto

package registry

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NetworkService struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Payload              string   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Matches              []*Match `protobuf:"bytes,3,rep,name=matches,proto3" json:"matches,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkService) Reset()         { *m = NetworkService{} }
func (m *NetworkService) String() string { return proto.CompactTextString(m) }
func (*NetworkService) ProtoMessage()    {}
func (*NetworkService) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{0}
}

func (m *NetworkService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkService.Unmarshal(m, b)
}
func (m *NetworkService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkService.Marshal(b, m, deterministic)
}
func (m *NetworkService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkService.Merge(m, src)
}
func (m *NetworkService) XXX_Size() int {
	return xxx_messageInfo_NetworkService.Size(m)
}
func (m *NetworkService) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkService.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkService proto.InternalMessageInfo

func (m *NetworkService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkService) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *NetworkService) GetMatches() []*Match {
	if m != nil {
		return m.Matches
	}
	return nil
}

type Match struct {
	SourceSelector       map[string]string `protobuf:"bytes,1,rep,name=source_selector,json=sourceSelector,proto3" json:"source_selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Routes               []*Destination    `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Match) Reset()         { *m = Match{} }
func (m *Match) String() string { return proto.CompactTextString(m) }
func (*Match) ProtoMessage()    {}
func (*Match) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{1}
}

func (m *Match) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Match.Unmarshal(m, b)
}
func (m *Match) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Match.Marshal(b, m, deterministic)
}
func (m *Match) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Match.Merge(m, src)
}
func (m *Match) XXX_Size() int {
	return xxx_messageInfo_Match.Size(m)
}
func (m *Match) XXX_DiscardUnknown() {
	xxx_messageInfo_Match.DiscardUnknown(m)
}

var xxx_messageInfo_Match proto.InternalMessageInfo

func (m *Match) GetSourceSelector() map[string]string {
	if m != nil {
		return m.SourceSelector
	}
	return nil
}

func (m *Match) GetRoutes() []*Destination {
	if m != nil {
		return m.Routes
	}
	return nil
}

type Destination struct {
	DestinationSelector  map[string]string `protobuf:"bytes,1,rep,name=destination_selector,json=destinationSelector,proto3" json:"destination_selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Weight               uint32            `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Destination) Reset()         { *m = Destination{} }
func (m *Destination) String() string { return proto.CompactTextString(m) }
func (*Destination) ProtoMessage()    {}
func (*Destination) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{2}
}

func (m *Destination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Destination.Unmarshal(m, b)
}
func (m *Destination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Destination.Marshal(b, m, deterministic)
}
func (m *Destination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Destination.Merge(m, src)
}
func (m *Destination) XXX_Size() int {
	return xxx_messageInfo_Destination.Size(m)
}
func (m *Destination) XXX_DiscardUnknown() {
	xxx_messageInfo_Destination.DiscardUnknown(m)
}

var xxx_messageInfo_Destination proto.InternalMessageInfo

func (m *Destination) GetDestinationSelector() map[string]string {
	if m != nil {
		return m.DestinationSelector
	}
	return nil
}

func (m *Destination) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type NetworkServiceLabels struct {
	Labels               map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NetworkServiceLabels) Reset()         { *m = NetworkServiceLabels{} }
func (m *NetworkServiceLabels) String() string { return proto.CompactTextString(m) }
func (*NetworkServiceLabels) ProtoMessage()    {}
func (*NetworkServiceLabels) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{3}
}

func (m *NetworkServiceLabels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkServiceLabels.Unmarshal(m, b)
}
func (m *NetworkServiceLabels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkServiceLabels.Marshal(b, m, deterministic)
}
func (m *NetworkServiceLabels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkServiceLabels.Merge(m, src)
}
func (m *NetworkServiceLabels) XXX_Size() int {
	return xxx_messageInfo_NetworkServiceLabels.Size(m)
}
func (m *NetworkServiceLabels) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkServiceLabels.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkServiceLabels proto.InternalMessageInfo

func (m *NetworkServiceLabels) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type NetworkServiceEndpoint struct {
	Name                 string                           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NetworkServiceName   []string                         `protobuf:"bytes,2,rep,name=network_service_name,json=networkServiceName,proto3" json:"network_service_name,omitempty"`
	NetworkServiceLabels map[string]*NetworkServiceLabels `protobuf:"bytes,3,rep,name=network_service_labels,json=networkServiceLabels,proto3" json:"network_service_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Url                  string                           `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	ExpirationTime       *timestamp.Timestamp             `protobuf:"bytes,5,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *NetworkServiceEndpoint) Reset()         { *m = NetworkServiceEndpoint{} }
func (m *NetworkServiceEndpoint) String() string { return proto.CompactTextString(m) }
func (*NetworkServiceEndpoint) ProtoMessage()    {}
func (*NetworkServiceEndpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{4}
}

func (m *NetworkServiceEndpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkServiceEndpoint.Unmarshal(m, b)
}
func (m *NetworkServiceEndpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkServiceEndpoint.Marshal(b, m, deterministic)
}
func (m *NetworkServiceEndpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkServiceEndpoint.Merge(m, src)
}
func (m *NetworkServiceEndpoint) XXX_Size() int {
	return xxx_messageInfo_NetworkServiceEndpoint.Size(m)
}
func (m *NetworkServiceEndpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkServiceEndpoint.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkServiceEndpoint proto.InternalMessageInfo

func (m *NetworkServiceEndpoint) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkServiceEndpoint) GetNetworkServiceName() []string {
	if m != nil {
		return m.NetworkServiceName
	}
	return nil
}

func (m *NetworkServiceEndpoint) GetNetworkServiceLabels() map[string]*NetworkServiceLabels {
	if m != nil {
		return m.NetworkServiceLabels
	}
	return nil
}

func (m *NetworkServiceEndpoint) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *NetworkServiceEndpoint) GetExpirationTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpirationTime
	}
	return nil
}

type NetworkServiceQuery struct {
	NetworkServiceEndpoint *NetworkServiceEndpoint `protobuf:"bytes,1,opt,name=network_service_endpoint,json=networkServiceEndpoint,proto3" json:"network_service_endpoint,omitempty"`
	NetworkService         *NetworkService         `protobuf:"bytes,2,opt,name=network_service,json=networkService,proto3" json:"network_service,omitempty"`
	Watch                  bool                    `protobuf:"varint,3,opt,name=watch,proto3" json:"watch,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *NetworkServiceQuery) Reset()         { *m = NetworkServiceQuery{} }
func (m *NetworkServiceQuery) String() string { return proto.CompactTextString(m) }
func (*NetworkServiceQuery) ProtoMessage()    {}
func (*NetworkServiceQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{5}
}

func (m *NetworkServiceQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkServiceQuery.Unmarshal(m, b)
}
func (m *NetworkServiceQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkServiceQuery.Marshal(b, m, deterministic)
}
func (m *NetworkServiceQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkServiceQuery.Merge(m, src)
}
func (m *NetworkServiceQuery) XXX_Size() int {
	return xxx_messageInfo_NetworkServiceQuery.Size(m)
}
func (m *NetworkServiceQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkServiceQuery.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkServiceQuery proto.InternalMessageInfo

func (m *NetworkServiceQuery) GetNetworkServiceEndpoint() *NetworkServiceEndpoint {
	if m != nil {
		return m.NetworkServiceEndpoint
	}
	return nil
}

func (m *NetworkServiceQuery) GetNetworkService() *NetworkService {
	if m != nil {
		return m.NetworkService
	}
	return nil
}

func (m *NetworkServiceQuery) GetWatch() bool {
	if m != nil {
		return m.Watch
	}
	return false
}

type NetworkServiceEntry struct {
	NetworkServiceEndpoint *NetworkServiceEndpoint `protobuf:"bytes,1,opt,name=network_service_endpoint,json=networkServiceEndpoint,proto3" json:"network_service_endpoint,omitempty"`
	NetworkService         *NetworkService         `protobuf:"bytes,2,opt,name=network_service,json=networkService,proto3" json:"network_service,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *NetworkServiceEntry) Reset()         { *m = NetworkServiceEntry{} }
func (m *NetworkServiceEntry) String() string { return proto.CompactTextString(m) }
func (*NetworkServiceEntry) ProtoMessage()    {}
func (*NetworkServiceEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_41af05d40a615591, []int{6}
}

func (m *NetworkServiceEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkServiceEntry.Unmarshal(m, b)
}
func (m *NetworkServiceEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkServiceEntry.Marshal(b, m, deterministic)
}
func (m *NetworkServiceEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkServiceEntry.Merge(m, src)
}
func (m *NetworkServiceEntry) XXX_Size() int {
	return xxx_messageInfo_NetworkServiceEntry.Size(m)
}
func (m *NetworkServiceEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkServiceEntry.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkServiceEntry proto.InternalMessageInfo

func (m *NetworkServiceEntry) GetNetworkServiceEndpoint() *NetworkServiceEndpoint {
	if m != nil {
		return m.NetworkServiceEndpoint
	}
	return nil
}

func (m *NetworkServiceEntry) GetNetworkService() *NetworkService {
	if m != nil {
		return m.NetworkService
	}
	return nil
}

func init() {
	proto.RegisterType((*NetworkService)(nil), "registry.NetworkService")
	proto.RegisterType((*Match)(nil), "registry.Match")
	proto.RegisterMapType((map[string]string)(nil), "registry.Match.SourceSelectorEntry")
	proto.RegisterType((*Destination)(nil), "registry.Destination")
	proto.RegisterMapType((map[string]string)(nil), "registry.Destination.DestinationSelectorEntry")
	proto.RegisterType((*NetworkServiceLabels)(nil), "registry.NetworkServiceLabels")
	proto.RegisterMapType((map[string]string)(nil), "registry.NetworkServiceLabels.LabelsEntry")
	proto.RegisterType((*NetworkServiceEndpoint)(nil), "registry.NetworkServiceEndpoint")
	proto.RegisterMapType((map[string]*NetworkServiceLabels)(nil), "registry.NetworkServiceEndpoint.NetworkServiceLabelsEntry")
	proto.RegisterType((*NetworkServiceQuery)(nil), "registry.NetworkServiceQuery")
	proto.RegisterType((*NetworkServiceEntry)(nil), "registry.NetworkServiceEntry")
}

func init() { proto.RegisterFile("registry.proto", fileDescriptor_41af05d40a615591) }

var fileDescriptor_41af05d40a615591 = []byte{
	// 644 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0xc1, 0x6e, 0xd3, 0x4c,
	0x10, 0x96, 0x9b, 0x36, 0x6d, 0x27, 0xfa, 0x93, 0x6a, 0x9b, 0x3f, 0x5a, 0x2c, 0x81, 0xa2, 0x70,
	0x09, 0x48, 0x38, 0x55, 0xe8, 0x01, 0x7a, 0x6b, 0x4b, 0x2b, 0x0e, 0xa5, 0x12, 0x2e, 0x5c, 0x7a,
	0xa9, 0x9c, 0x64, 0x70, 0xac, 0xda, 0x5e, 0x6b, 0x77, 0xdd, 0xe2, 0xb7, 0xe0, 0xc2, 0x9b, 0xf0,
	0x0e, 0x48, 0x9c, 0x78, 0x13, 0x5e, 0x01, 0x79, 0x77, 0x43, 0xe2, 0xc4, 0x6e, 0xe9, 0x8d, 0x4b,
	0x3c, 0xb3, 0xfb, 0xcd, 0xe7, 0xf9, 0xbe, 0x9d, 0x8d, 0xa1, 0xc9, 0xd1, 0x0f, 0x84, 0xe4, 0x99,
	0x93, 0x70, 0x26, 0x19, 0xd9, 0x9a, 0xe5, 0x36, 0x4d, 0x64, 0x96, 0xa0, 0x18, 0x60, 0x94, 0xc8,
	0x4c, 0xff, 0x6a, 0x8c, 0xdd, 0x35, 0x3b, 0x32, 0x88, 0x50, 0x48, 0x2f, 0x4a, 0xe6, 0x91, 0x46,
	0xf4, 0x02, 0x68, 0x9e, 0xa3, 0xbc, 0x65, 0xfc, 0xfa, 0x02, 0xf9, 0x4d, 0x30, 0x46, 0x42, 0x60,
	0x3d, 0xf6, 0x22, 0xa4, 0x56, 0xd7, 0xea, 0x6f, 0xbb, 0x2a, 0x26, 0x14, 0x36, 0x13, 0x2f, 0x0b,
	0x99, 0x37, 0xa1, 0x6b, 0x6a, 0x79, 0x96, 0x92, 0x67, 0xb0, 0x19, 0x79, 0x72, 0x3c, 0x45, 0x41,
	0x6b, 0xdd, 0x5a, 0xbf, 0x31, 0x6c, 0x39, 0x7f, 0xfa, 0x7c, 0x97, 0x6f, 0xb8, 0xb3, 0xfd, 0xde,
	0x77, 0x0b, 0x36, 0xd4, 0x12, 0x39, 0x83, 0x96, 0x60, 0x29, 0x1f, 0xe3, 0x95, 0xc0, 0x10, 0xc7,
	0x92, 0x71, 0x6a, 0xa9, 0xe2, 0xa7, 0x4b, 0xc5, 0xce, 0x85, 0x82, 0x5d, 0x18, 0xd4, 0x49, 0x2c,
	0x79, 0xe6, 0x36, 0x45, 0x61, 0x91, 0xbc, 0x80, 0x3a, 0x67, 0xa9, 0x44, 0x41, 0xd7, 0x14, 0xc9,
	0xff, 0x73, 0x92, 0x37, 0x28, 0x64, 0x10, 0x7b, 0x32, 0x60, 0xb1, 0x6b, 0x40, 0xf6, 0x21, 0xec,
	0x96, 0xb0, 0x92, 0x1d, 0xa8, 0x5d, 0x63, 0x66, 0x54, 0xe7, 0x21, 0x69, 0xc3, 0xc6, 0x8d, 0x17,
	0xa6, 0x68, 0x24, 0xeb, 0xe4, 0x60, 0xed, 0x95, 0xd5, 0xfb, 0x69, 0x41, 0x63, 0x81, 0x9a, 0x78,
	0xd0, 0x9e, 0xcc, 0xd3, 0x65, 0x51, 0x4e, 0x69, 0x3f, 0x8b, 0x71, 0x51, 0xdf, 0xee, 0x64, 0x75,
	0x87, 0x74, 0xa0, 0x7e, 0x8b, 0x81, 0x3f, 0x95, 0xaa, 0x9b, 0xff, 0x5c, 0x93, 0xd9, 0xa7, 0x40,
	0xab, 0x88, 0x1e, 0x24, 0xe9, 0xab, 0x05, 0xed, 0xe2, 0x20, 0x9c, 0x79, 0x23, 0x0c, 0x05, 0x39,
	0x82, 0x7a, 0xa8, 0x22, 0xa3, 0xe6, 0xf9, 0x5c, 0x4d, 0x19, 0xde, 0xd1, 0x0f, 0xad, 0xc4, 0x54,
	0xda, 0xaf, 0xa1, 0xb1, 0xb0, 0xfc, 0xa0, 0xbe, 0xbe, 0xd4, 0xa0, 0x53, 0x7c, 0xcf, 0x49, 0x3c,
	0x49, 0x58, 0x10, 0xcb, 0xd2, 0x41, 0xdd, 0x83, 0x76, 0xac, 0xd1, 0x57, 0x42, 0xc3, 0xaf, 0x14,
	0x26, 0x9f, 0x8c, 0x6d, 0x97, 0xc4, 0x05, 0xa6, 0xf3, 0xbc, 0x22, 0x81, 0xce, 0x72, 0x85, 0xd1,
	0xab, 0xe7, 0xf9, 0xa0, 0x4a, 0xef, 0xac, 0x8f, 0x52, 0x1b, 0xb4, 0xfe, 0x76, 0x5c, 0xe6, 0xe8,
	0x0e, 0xd4, 0x52, 0x1e, 0xd2, 0x75, 0x2d, 0x3f, 0xe5, 0x21, 0x39, 0x86, 0x16, 0x7e, 0x4e, 0x02,
	0xae, 0xc7, 0x27, 0xbf, 0xa2, 0x74, 0xa3, 0x6b, 0xf5, 0x1b, 0x43, 0xdb, 0xf1, 0x19, 0xf3, 0x43,
	0xd4, 0x97, 0x75, 0x94, 0x7e, 0x72, 0x3e, 0xcc, 0xee, 0xaf, 0xdb, 0x9c, 0x97, 0xe4, 0x8b, 0xb6,
	0x0f, 0x8f, 0x2a, 0x3b, 0x29, 0xb1, 0x7c, 0x7f, 0xd1, 0xf2, 0xc6, 0xf0, 0xc9, 0xdd, 0xc7, 0xba,
	0x78, 0x24, 0x3f, 0x2c, 0xd8, 0x2d, 0x62, 0xde, 0xa7, 0xc8, 0x33, 0x72, 0x09, 0x74, 0xd9, 0x49,
	0x34, 0x1e, 0xa9, 0x17, 0x37, 0x86, 0xdd, 0xfb, 0xbc, 0x74, 0x3b, 0x71, 0xf9, 0x59, 0x1f, 0x42,
	0x6b, 0x89, 0xdb, 0xf4, 0x4d, 0xab, 0x28, 0xdd, 0x66, 0x91, 0x2a, 0x9f, 0xb1, 0xdb, 0xfc, 0x3f,
	0x85, 0xd6, 0xba, 0x56, 0x7f, 0xcb, 0xd5, 0x49, 0xef, 0xdb, 0x8a, 0x18, 0x6d, 0xd8, 0xbf, 0x2d,
	0x66, 0xf8, 0xcb, 0x5a, 0xbe, 0x16, 0xae, 0xa9, 0x24, 0x6f, 0x61, 0x4b, 0xc7, 0xc8, 0xc9, 0xe3,
	0xea, 0x1e, 0xf3, 0x0f, 0xc7, 0xdd, 0xdb, 0xe4, 0x14, 0xd6, 0x4f, 0x83, 0x78, 0x52, 0xcd, 0xa2,
	0xce, 0xfd, 0x1e, 0x96, 0x3d, 0x8b, 0x1c, 0x03, 0x7c, 0x8c, 0xf9, 0x5f, 0xf6, 0xd4, 0x59, 0x19,
	0xf9, 0x93, 0xfc, 0x83, 0x76, 0xb4, 0x7f, 0x39, 0xf4, 0x03, 0x39, 0x4d, 0x47, 0xce, 0x98, 0x45,
	0x03, 0x63, 0x87, 0xb1, 0x2f, 0x42, 0x31, 0x1d, 0x78, 0x49, 0x30, 0x48, 0xae, 0x7d, 0xf5, 0x9c,
	0xbd, 0x61, 0x54, 0x57, 0x2c, 0x2f, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x20, 0xc6, 0xff, 0x73,
	0x3d, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NetworkServiceRegistryClient is the client API for NetworkServiceRegistry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetworkServiceRegistryClient interface {
	Register(ctx context.Context, in *NetworkServiceEntry, opts ...grpc.CallOption) (*NetworkServiceEntry, error)
	Find(ctx context.Context, in *NetworkServiceQuery, opts ...grpc.CallOption) (NetworkServiceRegistry_FindClient, error)
	Unregister(ctx context.Context, in *NetworkServiceEntry, opts ...grpc.CallOption) (*empty.Empty, error)
}

type networkServiceRegistryClient struct {
	cc grpc.ClientConnInterface
}

func NewNetworkServiceRegistryClient(cc grpc.ClientConnInterface) NetworkServiceRegistryClient {
	return &networkServiceRegistryClient{cc}
}

func (c *networkServiceRegistryClient) Register(ctx context.Context, in *NetworkServiceEntry, opts ...grpc.CallOption) (*NetworkServiceEntry, error) {
	out := new(NetworkServiceEntry)
	err := c.cc.Invoke(ctx, "/registry.NetworkServiceRegistry/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceRegistryClient) Find(ctx context.Context, in *NetworkServiceQuery, opts ...grpc.CallOption) (NetworkServiceRegistry_FindClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NetworkServiceRegistry_serviceDesc.Streams[0], "/registry.NetworkServiceRegistry/Find", opts...)
	if err != nil {
		return nil, err
	}
	x := &networkServiceRegistryFindClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NetworkServiceRegistry_FindClient interface {
	Recv() (*NetworkServiceEntry, error)
	grpc.ClientStream
}

type networkServiceRegistryFindClient struct {
	grpc.ClientStream
}

func (x *networkServiceRegistryFindClient) Recv() (*NetworkServiceEntry, error) {
	m := new(NetworkServiceEntry)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *networkServiceRegistryClient) Unregister(ctx context.Context, in *NetworkServiceEntry, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/registry.NetworkServiceRegistry/Unregister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NetworkServiceRegistryServer is the server API for NetworkServiceRegistry service.
type NetworkServiceRegistryServer interface {
	Register(context.Context, *NetworkServiceEntry) (*NetworkServiceEntry, error)
	Find(*NetworkServiceQuery, NetworkServiceRegistry_FindServer) error
	Unregister(context.Context, *NetworkServiceEntry) (*empty.Empty, error)
}

// UnimplementedNetworkServiceRegistryServer can be embedded to have forward compatible implementations.
type UnimplementedNetworkServiceRegistryServer struct {
}

func (*UnimplementedNetworkServiceRegistryServer) Register(ctx context.Context, req *NetworkServiceEntry) (*NetworkServiceEntry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedNetworkServiceRegistryServer) Find(req *NetworkServiceQuery, srv NetworkServiceRegistry_FindServer) error {
	return status.Errorf(codes.Unimplemented, "method Find not implemented")
}
func (*UnimplementedNetworkServiceRegistryServer) Unregister(ctx context.Context, req *NetworkServiceEntry) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unregister not implemented")
}

func RegisterNetworkServiceRegistryServer(s *grpc.Server, srv NetworkServiceRegistryServer) {
	s.RegisterService(&_NetworkServiceRegistry_serviceDesc, srv)
}

func _NetworkServiceRegistry_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetworkServiceEntry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceRegistryServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registry.NetworkServiceRegistry/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceRegistryServer).Register(ctx, req.(*NetworkServiceEntry))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkServiceRegistry_Find_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NetworkServiceQuery)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetworkServiceRegistryServer).Find(m, &networkServiceRegistryFindServer{stream})
}

type NetworkServiceRegistry_FindServer interface {
	Send(*NetworkServiceEntry) error
	grpc.ServerStream
}

type networkServiceRegistryFindServer struct {
	grpc.ServerStream
}

func (x *networkServiceRegistryFindServer) Send(m *NetworkServiceEntry) error {
	return x.ServerStream.SendMsg(m)
}

func _NetworkServiceRegistry_Unregister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetworkServiceEntry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceRegistryServer).Unregister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registry.NetworkServiceRegistry/Unregister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceRegistryServer).Unregister(ctx, req.(*NetworkServiceEntry))
	}
	return interceptor(ctx, in, info, handler)
}

var _NetworkServiceRegistry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "registry.NetworkServiceRegistry",
	HandlerType: (*NetworkServiceRegistryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _NetworkServiceRegistry_Register_Handler,
		},
		{
			MethodName: "Unregister",
			Handler:    _NetworkServiceRegistry_Unregister_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Find",
			Handler:       _NetworkServiceRegistry_Find_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "registry.proto",
}
